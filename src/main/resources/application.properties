# The URL for the database connection. It specifies the database server (localhost)
# and the database name (testdb) for MySQL running on port 3306.
spring.datasource.url=jdbc:mysql://localhost:3306/testdb

# The username used to connect to the database (testdb) as 'user'.
spring.datasource.username=user

# The password for the database user account.
spring.datasource.password=password

# The fully qualified class name of the JDBC driver for MySQL. This tells Spring which driver to use for connecting to the database.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate's setting for automatic schema management. 'update' means that Hibernate will update the database schema to match the entity mappings when the application starts.
# Other options include 'none', 'create', 'create-drop', and 'validate'
spring.jpa.hibernate.ddl-auto=update

# The size of the batch for batch processing of SQL statements. This means 50 SQL statements will be grouped together in a single transaction to improve performance.
spring.jpa.properties.hibernate.jdbc.batch_size=50

# Hibernate will order INSERT statements by entity type to optimize performance.
spring.jpa.properties.hibernate.order_inserts=true

# Hibernate will order UPDATE statements by entity type to optimize performance.
spring.jpa.properties.hibernate.order_updates=true

# Enables SQL logging. When set to true, Hibernate will output the SQL statements it executes to the console, which is useful for debugging.
spring.jpa.show-sql=true
